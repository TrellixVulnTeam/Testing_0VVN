{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["\n\nconst fetch = require('npm-registry-fetch')\nconst validate = require('aproba')\n\nconst eu = encodeURIComponent\nconst cmd = module.exports = {}\ncmd.add = (name, endpoint, secret, opts = {}) => {\n  validate('SSSO', [name, endpoint, secret, opts])\n  let type = 'package'\n  if (name.match(/^@[^/]+$/)) {\n    type = 'scope'\n  }\n  if (name[0] === '~') {\n    type = 'owner'\n    name = name.substr(1)\n  }\n  return fetch.json('/-/npm/v1/hooks/hook', {\n    ...opts,\n    method: 'POST',\n    body: { type, name, endpoint, secret },\n  })\n}\n\ncmd.rm = (id, opts = {}) => {\n  validate('SO', [id, opts])\n  return fetch.json(`/-/npm/v1/hooks/hook/${eu(id)}`, {\n    ...opts,\n    method: 'DELETE',\n  }).catch(err => {\n    if (err.code === 'E404') {\n      return null\n    } else {\n      throw err\n    }\n  })\n}\n\ncmd.update = (id, endpoint, secret, opts = {}) => {\n  validate('SSSO', [id, endpoint, secret, opts])\n  return fetch.json(`/-/npm/v1/hooks/hook/${eu(id)}`, {\n    ...opts,\n    method: 'PUT',\n    body: { endpoint, secret },\n  })\n}\n\ncmd.find = (id, opts = {}) => {\n  validate('SO', [id, opts])\n  return fetch.json(`/-/npm/v1/hooks/hook/${eu(id)}`, opts)\n}\n\ncmd.ls = (opts = {}) => {\n  return cmd.ls.stream(opts).collect()\n}\n\ncmd.ls.stream = (opts = {}) => {\n  const { package: pkg, limit, offset } = opts\n  validate('S|Z', [pkg])\n  validate('N|Z', [limit])\n  validate('N|Z', [offset])\n  return fetch.json.stream('/-/npm/v1/hooks', 'objects.*', {\n    ...opts,\n    query: {\n      package: pkg,\n      limit,\n      offset,\n    },\n  })\n}\n"]}