{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["\n\nconst pacote = require('pacote')\nconst npa = require('npm-package-arg')\nconst runScript = require('@npmcli/run-script')\nconst path = require('path')\nconst util = require('util')\nconst writeFile = util.promisify(require('fs').writeFile)\n\nmodule.exports = pack\nasync function pack (spec = 'file:.', opts = {}) {\n  // gets spec\n  spec = npa(spec)\n\n  const manifest = await pacote.manifest(spec, opts)\n\n  // Default to true if no log options passed, set to false if we're in silent\n  // mode\n  const banner = !opts.silent\n\n  if (spec.type === 'directory') {\n    // prepack\n    await runScript({\n      ...opts,\n      event: 'prepack',\n      path: spec.fetchSpec,\n      stdio: 'inherit',\n      pkg: manifest,\n      banner,\n    })\n  }\n\n  // packs tarball\n  const tarball = await pacote.tarball(manifest._resolved, {\n    ...opts,\n    integrity: manifest._integrity,\n  })\n\n  // check for explicit `false` so the default behavior is to skip writing to disk\n  if (opts.dryRun === false) {\n    const filename = `${manifest.name}-${manifest.version}.tgz`\n      .replace(/^@/, '').replace(/\\//, '-')\n    const destination = path.resolve(opts.packDestination, filename)\n    await writeFile(destination, tarball)\n  }\n\n  if (spec.type === 'directory') {\n    // postpack\n    await runScript({\n      ...opts,\n      event: 'postpack',\n      path: spec.fetchSpec,\n      stdio: 'inherit',\n      pkg: manifest,\n      banner,\n      env: {\n        npm_package_from: tarball.from,\n        npm_package_resolved: tarball.resolved,\n        npm_package_integrity: tarball.integrity,\n      },\n    })\n  }\n\n  return tarball\n}\n"]}