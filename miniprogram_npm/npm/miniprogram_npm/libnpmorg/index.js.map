{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["\n\nconst eu = encodeURIComponent\nconst fetch = require('npm-registry-fetch')\nconst validate = require('aproba')\n\n// From https://github.com/npm/registry/blob/master/docs/orgs/memberships.md\nconst cmd = module.exports\n\nclass MembershipDetail {}\ncmd.set = (org, user, role, opts = {}) => {\n  if (\n    typeof role === 'object' &&\n    Object.keys(opts).length === 0\n  ) {\n    opts = role\n    role = undefined\n  }\n  validate('SSSO|SSZO', [org, user, role, opts])\n  user = user.replace(/^@?/, '')\n  org = org.replace(/^@?/, '')\n  return fetch.json(`/-/org/${eu(org)}/user`, {\n    ...opts,\n    method: 'PUT',\n    body: { user, role },\n  }).then(ret => Object.assign(new MembershipDetail(), ret))\n}\n\ncmd.rm = (org, user, opts = {}) => {\n  validate('SSO', [org, user, opts])\n  user = user.replace(/^@?/, '')\n  org = org.replace(/^@?/, '')\n  return fetch(`/-/org/${eu(org)}/user`, {\n    ...opts,\n    method: 'DELETE',\n    body: { user },\n    ignoreBody: true,\n  }).then(() => null)\n}\n\nclass Roster {}\ncmd.ls = (org, opts = {}) => {\n  return cmd.ls.stream(org, opts)\n    .collect()\n    .then(data => data.reduce((acc, [key, val]) => {\n      if (!acc) {\n        acc = {}\n      }\n      acc[key] = val\n      return acc\n    }, null))\n    .then(ret => Object.assign(new Roster(), ret))\n}\n\ncmd.ls.stream = (org, opts = {}) => {\n  validate('SO', [org, opts])\n  org = org.replace(/^@?/, '')\n  return fetch.json.stream(`/-/org/${eu(org)}/user`, '*', {\n    ...opts,\n    mapJSON: (value, [key]) => {\n      return [key, value]\n    },\n  })\n}\n"]}